{"version":3,"sources":["App.js","Display.js","Keyboard.js","serviceWorker.js","index.js"],"names":["appName","NUMBER_REGEX","OPERATION_REGEX","App","React","useState","formula","setFormula","currentVal","setCurrentVal","answer","setAnswer","lastEntered","setLastEntered","backgroundColor","setbackgroundColor","handleNumbers","event","num","key","target","value","match","resetCalculator","prevVal","length","isDecimal","push","setTimeout","arr","indexOf","toggleSign","shift","handleOperations","op","parseFloat","join","pop","console","error","handleSciFunctions","func","result","undefined","Math","pow","sqrt","round","toString","removeLastDigit","N","clearDisplay","handleResult","split","updatedFormula","eval","changeBgColor","COLORS","floor","random","handleKeyPress","preventDefault","className","style","id","tabIndex","onKeyDown","aria-hidden","onClick","clear","reset","delete","operations","functions","numbers","href","rel","Display","props","fontSize","document","getElementById","NUM_DIGITS","adjustFontSize","Keyboard","Boolean","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.452295c7.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport Display from './Display';\nimport Keyboard from './Keyboard';\n\n\nconst appName = \"Standard Calculator\";\nconst NUMBER_REGEX = /[0-9]+(\\.[0-9]+)?/;\nconst OPERATION_REGEX = /(\\+|-|\\*|\\/)/;\n\nfunction App() {\n   const [formula, setFormula] = React.useState([]);\n   const [currentVal, setCurrentVal] = React.useState([]);\n   const [answer, setAnswer] = React.useState(0);\n   const [lastEntered, setLastEntered] = React.useState('0');\n   const [backgroundColor, setbackgroundColor] = React.useState('#7fffd4');\n\n   const handleNumbers = (event) => {\n      const num = event.key || event.target.value;\n      const DIGIT_LIMIT = 15;  // Max number of character in an input value\n      \n      // If previous value entered is an operator, reset current value list\n      // and initialize it with the new value entered\n      if (lastEntered.match(OPERATION_REGEX) || lastEntered === '=') {\n         if (lastEntered === '=') {\n            resetCalculator();\n         }\n         // Add one leading zero for decimal number < 0\n         setCurrentVal(num === '.' ? ['0', '.'] : [num]);\n         setLastEntered(num);\n      } \n      // If previous value entered is a digit or decimal point (.),\n      // keep adding digits to the current value list\n      else {\n         const prevVal = [...currentVal];\n         if (prevVal.length < DIGIT_LIMIT) {\n            if ((num === '0' && currentVal.length <= 0) ||\n               (num === '.' && isDecimal(currentVal))) {\n               // Prevent leading zeros for non decimal numbers\n            } else {\n               // Add one leading zero for decimal number < 0\n               if (num === '.' && prevVal.length === 0) {\n                  prevVal.push('0');\n               }\n               setCurrentVal([...prevVal, num]);\n               setLastEntered(num);\n            }\n         } \n         // Print error message if digit limit is reached\n         else {\n            setCurrentVal([\"    digit limit met\"]);\n            setTimeout(() => setCurrentVal([...prevVal]), 1200);\n         }\n      }\n   }\n\n   function isDecimal(arr) {\n      return arr.indexOf('.') >= 0;\n   }\n\n   function toggleSign() {\n      if (currentVal.length === 0 || \n            (currentVal.length === 1 &&  currentVal[0] === '0') || \n            lastEntered === '=') {\n         return;\n      }\n\n      if (currentVal[0] === '-') {\n         currentVal.shift();\n         setCurrentVal([...currentVal]);\n      } else {\n         setCurrentVal(['-', ...currentVal]);\n      }\n   }\n\n   const handleOperations = (event) => {\n      const op = event.key || event.target.value; // Operator +, -, /, or *\n\n      if (lastEntered.match(NUMBER_REGEX)) {\n         const value = parseFloat(currentVal.join(\"\") || 0);\n         setFormula([...formula, value, op]);\n         setLastEntered(op);\n      } \n      // Update operator\n      else if (lastEntered.match(OPERATION_REGEX)) {\n         formula.pop();\n         setFormula([...formula, op]);\n         setLastEntered(op);\n      } else if (lastEntered === '=') {\n         setFormula([answer, op]);\n         setLastEntered(op);\n      }\n      // Unexpected error\n      else {\n         console.error('ERROR!! operator not recognized:', lastEntered);\n      }\n   }\n\n   function handleSciFunctions(event) {\n      const func = event.target.value;\n      const value = parseFloat(currentVal.join(\"\") || 0);\n      let result = undefined;\n\n      switch (func) {\n         case \"inv\":\n            result = 1 / value;\n            break;\n         case \"sqr\":\n            result = Math.pow(value, 2);\n            break;\n         case \"sqrt\":\n            result = Math.sqrt(value);\n            break;\n         case \"round\":\n            result = Math.round(value);\n            break;\n         default:\n      }\n\n      setFormula([func, '(', value, ')', '=']);\n      setLastEntered('=');\n      setCurrentVal([result.toString()]);\n      setAnswer(result);\n   }\n\n   function removeLastDigit() {\n      currentVal.pop();\n      const N = currentVal.length;\n\n      if (lastEntered === '=') {\n         setCurrentVal([]);\n      }\n      // Remove last element from currenVal. Empty currentVal if \n      // it now only contains ['0'], ['-', '0'], or ['-']\n      else if ((N === 2 && currentVal[N - 2] === '-' && currentVal[N - 1] === '0') || \n               (currentVal[N - 1] === '-')) {\n         setCurrentVal([]);\n      } else {\n         setCurrentVal([...currentVal]);\n      }\n   }\n\n   function clearDisplay() {\n      setCurrentVal([]);\n   }\n\n   function resetCalculator() {\n      setCurrentVal([]);\n      setFormula([]);\n      setAnswer(0);\n      setLastEntered('0');\n   }\n\n   function handleResult() {\n      if (lastEntered === '=') {\n         setFormula([answer, '=']);\n         setCurrentVal(answer.toString().split(\"\"));\n         setLastEntered('=');\n      } else {\n         // Add current value to formula before evaluating\n         const updatedFormula = [...formula, parseFloat(currentVal.join(\"\") || 0)];\n         setFormula([...updatedFormula, '=']);\n         setLastEntered('=');\n         const value = eval(updatedFormula.join(\"\"));\n         setCurrentVal([value.toString()]);\n         setAnswer(value);\n      }\n   }\n\n   function changeBgColor() {\n      const COLORS = ['#7fffd4','#e9967a','#008b8b','#f0e68c','#ffdead','#bc8f8f','#008080'];\n      setbackgroundColor(COLORS[Math.floor(Math.random() * COLORS.length)]);\n   }\n\n   function handleKeyPress(event) {\n      event.preventDefault();\n\n      if (event.key.match(NUMBER_REGEX) || event.key === '.') {\n         handleNumbers(event);\n      } else if (event.key.match(OPERATION_REGEX)) {\n         handleOperations(event);\n      } else if (event.key === 'Enter') {\n         handleResult();\n      } else if (event.key === 'Backspace') {\n         removeLastDigit();\n      }\n   }\n\n   return (\n      <div className=\"App\" style={{backgroundColor: backgroundColor}}>\n         <div id=\"calculator\" tabIndex={-1} onKeyDown={handleKeyPress}>\n            <div id=\"header\">\n               <h1 id=\"app_name\">{appName}</h1>\n               <i id=\"color\" \n                  className=\"fa fa-paint-brush\" \n                  aria-hidden=\"true\" \n                  onClick={changeBgColor}></i>\n            </div>\n            <Display formula={formula.join(\" \")} \n                     currentVal={currentVal.join(\"\") || '0'} />\n            <Keyboard clear={clearDisplay}\n               reset={resetCalculator}\n               delete={removeLastDigit}\n               operations={handleOperations}\n               functions={handleSciFunctions}\n               numbers={handleNumbers}\n               toggleSign={toggleSign}\n               handleResult={handleResult} />\n         </div>\n         <div id=\"footer\">\n            <p>Designed and Coded By <a id=\"author\" href=\"https://www.github.com/cdngouma\" target=\"_blank\" rel=\"noopener noreferrer\">cdngouma</a>\n            </p>\n         </div>\n      </div>\n   );\n}\n\nexport default App;","import React from 'react';\r\n\r\nfunction Display(props) {\r\n   function adjustFontSize() {\r\n      let display = document.getElementById(\"display\");\r\n\r\n      if (!display) return;\r\n\r\n      const NUM_DIGITS = props.currentVal.length;\r\n\r\n      if (NUM_DIGITS <= 12) {\r\n         return \"3.2em\";\r\n      } else if (NUM_DIGITS < 15) {\r\n         return `${3.2 - ((NUM_DIGITS-12)*.23)}em`;\r\n      } else if (NUM_DIGITS < 18) {\r\n         return `${2.72 - ((NUM_DIGITS-14)*.15)}em`;\r\n      } else if (NUM_DIGITS <= 20) {\r\n         return `${2.27 - ((NUM_DIGITS-17)*.12)}em`;\r\n      } else if (NUM_DIGITS < 23) {\r\n         return \"1.77em\";\r\n      } else {\r\n         return \"1.63em\";\r\n      }\r\n   }\r\n\r\n   const fontSize = adjustFontSize();\r\n\r\n   return (\r\n      <div className=\"display__screen\">\r\n         <span id=\"formula\">{props.formula}</span>\r\n         <span id=\"display\" style={{fontSize: fontSize}}>{props.currentVal}</span>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Display;","import React from 'react';\r\n\r\nfunction Keyboard(props) {\r\n   return (\r\n      <div className=\"keyboard\">\r\n         {/* System buttons */}\r\n         <button id=\"clear\" className=\"app__func-btn\" onClick={props.clear}>CE</button>\r\n         <button id=\"reset\" className=\"app__func-btn\" onClick={props.reset}>C</button>\r\n         <button id=\"delete\" className=\"app__func-btn\" onClick={props.delete}>DEL</button>\r\n         {/* Basic operators */}\r\n         <button id=\"add\" className=\"app__func-btn\" value=\"+\" onClick={props.operations}>+</button>\r\n         <button id=\"subtract\" className=\"app__func-btn\" value=\"-\" onClick={props.operations}>&minus;</button>\r\n         <button id=\"multiply\" className=\"app__func-btn\" value=\"*\" onClick={props.operations}>&times;</button>\r\n         <button id=\"divide\" className=\"app__func-btn\" value=\"/\" onClick={props.operations}>&divide;</button>\r\n         {/* Scientific functions */}\r\n         <button id=\"sqr\" className=\"app__func-btn\" value=\"sqr\" onClick={props.functions}>sqr</button>\r\n         <button id=\"sqrt\" className=\"app__func-btn\" value=\"sqrt\" onClick={props.functions}>sqrt</button>\r\n         <button id=\"inv\" className=\"app__func-btn\" value=\"inv\" onClick={props.functions}>inv</button>\r\n         <button id=\"percent\" className=\"app__func-btn\" value=\"round\" onClick={props.functions}>round</button>\r\n         {/* digits buttons */}\r\n         <button id=\"zero\" value=\"0\" onClick={props.numbers}>0</button>\r\n         <button id=\"one\" value=\"1\" onClick={props.numbers}>1</button>\r\n         <button id=\"two\" value=\"2\" onClick={props.numbers}>2</button>\r\n         <button id=\"three\" value=\"3\" onClick={props.numbers}>3</button>\r\n         <button id=\"four\" value=\"4\" onClick={props.numbers}>4</button>\r\n         <button id=\"five\" value=\"5\" onClick={props.numbers}>5</button>\r\n         <button id=\"six\" value=\"6\" onClick={props.numbers}>6</button>\r\n         <button id=\"seven\" value=\"7\" onClick={props.numbers}>7</button>\r\n         <button id=\"eight\" value=\"8\" onClick={props.numbers}>8</button>\r\n         <button id=\"nine\" value=\"9\" onClick={props.numbers}>9</button>\r\n         {/* other buttons */}\r\n         <button id=\"decimal\" onClick={props.numbers} value=\".\">.</button>\r\n         <button id=\"sign-toggle\" onClick={props.toggleSign}>+/-</button>\r\n         <button id=\"equals\" onClick={props.handleResult}>=</button>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Keyboard;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}